scalar JSONscalar Datescalar DateTimetype User {  id: ID!  email: String!  displayName: String  photoURL: String}type AuthPayload {  token: String!  user: User!}input LoginInput {  email: String!  password: String!}type GitHubRepo {  id: ID!  name: String!  fullName: String!  private: Boolean!  htmlUrl: String!  description: String  owner: String!}type GitHubFile {  path: String!  content: String!  sha: String}input GitHubCommitFileInput {  owner: String!  repo: String!  path: String!  content: String!  message: String!  branch: String}type JiraIssue {  id: ID!  key: String!  self: String!  url: String  summary: String  issueType: String  status: String  projectKey: String}input JiraCreateIssueInput {  projectKey: String!  summary: String!  description: String  issueType: String!  assigneeEmail: String  priority: String  labels: [String!]}type SlackMessageResponse {  ok: Boolean!  channel: String  ts: String  message: String}input SlackPostMessageInput {  channel: String!  text: String!  username: String  iconEmoji: String}type AiCodeExplanation {  summary: String!  lineByLine: [AiCodeLineExplanation!]!  complexity: AiCodeComplexity!  suggestions: [String!]!}type AiCodeLineExplanation {  lines: String!  explanation: String!}type AiCodeComplexity {  time: String!  space: String!}type AiCommitMessage {  message: String!}type AiImageGeneration {  imageUrl: String!}type AiUnitTest {  tests: String!}type AiThemeConfiguration {  mode: String!  palette: JSON!  theme: JSON!  accessibility: JSON!}input AiThemeGenerationInput {  description: String  imageUrl: String}input AiThemeUpdateInput {  colors: JSON!  mode: String!}type FeatureFlag {  id: ID!  name: String!  enabled: Boolean!  description: String}type ThemeConfiguration {  id: ID!  name: String!  colors: JSON!  mode: String!}input ThemeInput {  name: String!  colors: JSON!  mode: String!}type Query {  me: User  githubRepos(owner: String, limit: Int): [GitHubRepo!]!  githubFileContent(owner: String!, repo: String!, path: String!): GitHubFile  aiCodeExplain(code: String!): AiCodeExplanation  aiGenerateImage(prompt: String!): AiImageGeneration  listFeatureFlags: [FeatureFlag!]!  getThemeConfiguration: ThemeConfiguration}type Mutation {  login(input: LoginInput!): AuthPayload  logout: Boolean  refreshToken: String  githubCommitFile(input: GitHubCommitFileInput!): String  jiraCreateIssue(input: JiraCreateIssueInput!): JiraIssue  slackPostMessage(input: SlackPostMessageInput!): SlackMessageResponse  aiGenerateCommitMessage(diff: String!): AiCommitMessage  aiGenerateUnitTests(code: String!): AiUnitTest  aiGenerateTheme(input: AiThemeGenerationInput!): AiThemeConfiguration  updateThemeConfiguration(input: ThemeInput!): ThemeConfiguration}